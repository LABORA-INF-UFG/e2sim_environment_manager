/**
* E2 Node UE API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Anr_payload.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Anr_payload::Anr_payload()
{
    m_NodebIsSet = false;
    m_RSRP = 0.0;
    m_RSRPIsSet = false;
    m_RSRQ = 0.0;
    m_RSRQIsSet = false;
    m_SINR = 0.0;
    m_SINRIsSet = false;
    m_CQI = 0.0;
    m_CQIIsSet = false;
    m_BLER = 0.0;
    m_BLERIsSet = false;
    
}

void Anr_payload::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Anr_payload::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Anr_payload::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Anr_payload" : pathPrefix;

                            
    return success;
}

bool Anr_payload::operator==(const Anr_payload& rhs) const
{
    return
    
    
    
    ((!nodebIsSet() && !rhs.nodebIsSet()) || (nodebIsSet() && rhs.nodebIsSet() && getNodeb() == rhs.getNodeb())) &&
    
    
    ((!rSRPIsSet() && !rhs.rSRPIsSet()) || (rSRPIsSet() && rhs.rSRPIsSet() && getRSRP() == rhs.getRSRP())) &&
    
    
    ((!rSRQIsSet() && !rhs.rSRQIsSet()) || (rSRQIsSet() && rhs.rSRQIsSet() && getRSRQ() == rhs.getRSRQ())) &&
    
    
    ((!sINRIsSet() && !rhs.sINRIsSet()) || (sINRIsSet() && rhs.sINRIsSet() && getSINR() == rhs.getSINR())) &&
    
    
    ((!cQIIsSet() && !rhs.cQIIsSet()) || (cQIIsSet() && rhs.cQIIsSet() && getCQI() == rhs.getCQI())) &&
    
    
    ((!bLERIsSet() && !rhs.bLERIsSet()) || (bLERIsSet() && rhs.bLERIsSet() && getBLER() == rhs.getBLER()))
    
    ;
}

bool Anr_payload::operator!=(const Anr_payload& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Anr_payload& o)
{
    j = nlohmann::json::object();
    if(o.nodebIsSet())
        j["nodeb"] = o.m_Nodeb;
    if(o.rSRPIsSet())
        j["RSRP"] = o.m_RSRP;
    if(o.rSRQIsSet())
        j["RSRQ"] = o.m_RSRQ;
    if(o.sINRIsSet())
        j["SINR"] = o.m_SINR;
    if(o.cQIIsSet())
        j["CQI"] = o.m_CQI;
    if(o.bLERIsSet())
        j["BLER"] = o.m_BLER;
    
}

void from_json(const nlohmann::json& j, Anr_payload& o)
{
    if(j.find("nodeb") != j.end())
    {
        j.at("nodeb").get_to(o.m_Nodeb);
        o.m_NodebIsSet = true;
    } 
    if(j.find("RSRP") != j.end())
    {
        j.at("RSRP").get_to(o.m_RSRP);
        o.m_RSRPIsSet = true;
    } 
    if(j.find("RSRQ") != j.end())
    {
        j.at("RSRQ").get_to(o.m_RSRQ);
        o.m_RSRQIsSet = true;
    } 
    if(j.find("SINR") != j.end())
    {
        j.at("SINR").get_to(o.m_SINR);
        o.m_SINRIsSet = true;
    } 
    if(j.find("CQI") != j.end())
    {
        j.at("CQI").get_to(o.m_CQI);
        o.m_CQIIsSet = true;
    } 
    if(j.find("BLER") != j.end())
    {
        j.at("BLER").get_to(o.m_BLER);
        o.m_BLERIsSet = true;
    } 
    
}

org::openapitools::server::model::Nodeb_descriptor Anr_payload::getNodeb() const
{
    return m_Nodeb;
}
void Anr_payload::setNodeb(org::openapitools::server::model::Nodeb_descriptor const& value)
{
    m_Nodeb = value;
    m_NodebIsSet = true;
}
bool Anr_payload::nodebIsSet() const
{
    return m_NodebIsSet;
}
void Anr_payload::unsetNodeb()
{
    m_NodebIsSet = false;
}
double Anr_payload::getRSRP() const
{
    return m_RSRP;
}
void Anr_payload::setRSRP(double const value)
{
    m_RSRP = value;
    m_RSRPIsSet = true;
}
bool Anr_payload::rSRPIsSet() const
{
    return m_RSRPIsSet;
}
void Anr_payload::unsetRSRP()
{
    m_RSRPIsSet = false;
}
double Anr_payload::getRSRQ() const
{
    return m_RSRQ;
}
void Anr_payload::setRSRQ(double const value)
{
    m_RSRQ = value;
    m_RSRQIsSet = true;
}
bool Anr_payload::rSRQIsSet() const
{
    return m_RSRQIsSet;
}
void Anr_payload::unsetRSRQ()
{
    m_RSRQIsSet = false;
}
double Anr_payload::getSINR() const
{
    return m_SINR;
}
void Anr_payload::setSINR(double const value)
{
    m_SINR = value;
    m_SINRIsSet = true;
}
bool Anr_payload::sINRIsSet() const
{
    return m_SINRIsSet;
}
void Anr_payload::unsetSINR()
{
    m_SINRIsSet = false;
}
double Anr_payload::getCQI() const
{
    return m_CQI;
}
void Anr_payload::setCQI(double const value)
{
    m_CQI = value;
    m_CQIIsSet = true;
}
bool Anr_payload::cQIIsSet() const
{
    return m_CQIIsSet;
}
void Anr_payload::unsetCQI()
{
    m_CQIIsSet = false;
}
double Anr_payload::getBLER() const
{
    return m_BLER;
}
void Anr_payload::setBLER(double const value)
{
    m_BLER = value;
    m_BLERIsSet = true;
}
bool Anr_payload::bLERIsSet() const
{
    return m_BLERIsSet;
}
void Anr_payload::unsetBLER()
{
    m_BLERIsSet = false;
}


} // namespace org::openapitools::server::model

