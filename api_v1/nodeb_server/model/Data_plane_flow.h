/**
* E2 Node API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Data_plane_flow.h
 *
 * 
 */

#ifndef Data_plane_flow_H_
#define Data_plane_flow_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  Data_plane_flow
{
public:
    Data_plane_flow();
    virtual ~Data_plane_flow() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Data_plane_flow& rhs) const;
    bool operator!=(const Data_plane_flow& rhs) const;

    /////////////////////////////////////////////
    /// Data_plane_flow members

    /// <summary>
    /// 
    /// </summary>
    double getAverageThroughput() const;
    void setAverageThroughput(double const value);
    /// <summary>
    /// 
    /// </summary>
    double getLatency() const;
    void setLatency(double const value);

    friend  void to_json(nlohmann::json& j, const Data_plane_flow& o);
    friend  void from_json(const nlohmann::json& j, Data_plane_flow& o);
protected:
    double m_AverageThroughput;

    double m_Latency;

    
};

} // namespace org::openapitools::server::model

#endif /* Data_plane_flow_H_ */
